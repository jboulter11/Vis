Elevator Summary
Our project is a python app designed to help a user  clean up their computer and help them organize their files by letting the user tag files, automatically sort files by various metadata, and by giving the user a visualization of their space usage.  
Thorough Description
This program is designed to give the average user a full understanding and control of their filesystem. It provides top-level and drill down analysis of space usage in both a quantitative and visualized format so that any user can manage their files with just a few clicks. It will have tools to organize files in specific ways for specific types. For example, one can organize their pictures by the date that they were taken, movies by genre and then release year, and documents by date created. All of these features are fully customizable to a user’s needs and preferences. The benefit of the drill-down model is that it does not overwhelm any party, the user or the program. It allows users to selectively focus on what files they care about and put energy into those parts. Our approach allows the program to analyze the system once, and then work quickly from there,  avoiding excessive load times. This also allows us to customize the organization options for each folder. For video files, this means taking a few frames from a video file so that the user can determine what the file is. For audio, this means taking a few seconds of a file and playing it so that poorly named and unnamed files can be located. 
Business Case
The program is a unique and robust file management application that aims to deepen the user’s level of interaction with their file system. We aim for the program to be accessible and useful to power users as well as the layman, and change the way users perceive their storage in general. Other solutions that provide file system visualization exist, but they are not very featureful and are not designed to manage or browse files. Examples of these are WinDirStat/Disk Inventory X. While they provide excellent and unique visualizations of used storage space broken down by file type, they do not meet the goals set forth by this project. Namely, they are not very interactive and are not adequate file browsers. They are also limited to visualizing the filesystem by file size and type. However, because they are free and open source, they can serve as reference implementations for some parts of our feature set and speed up development.

